# When pushing to GitHub, Cloud Build will run these steps in order

steps:
  # --- Step 1: Build Docker image ---
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '.'

  # --- Step 2: Push Docker image to Artifact Registry ---
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'

  # --- Step 3: Deploy to Cloud Run ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-secrets=DATABASE_URL=${_DB_SECRET_NAME}:latest'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'

substitutions:
  _SERVICE_NAME: 'voiceassistant-backend'
  _REGION: 'europe-west3'
  _ARTIFACT_REPO_NAME: 'cloud-run-source-deploy'
  _DB_SECRET_NAME: 'SUPABASE_DB_URL'

# --- THE FIX IS HERE ---
# Specify logging behavior to resolve the "invalid argument" error regarding logs_bucket.
# This tells Cloud Build to send logs directly to Cloud Logging instead of a GCS bucket.
options:
  logging: CLOUD_LOGGING_ONLY

# Set the timeout for the build
timeout: '1200s'